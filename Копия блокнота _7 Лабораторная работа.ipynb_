{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1IMeTWkwXXE6gac4D_3WuB76yF6mkCB3F","timestamp":1749621435850}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Работа с файлами"],"metadata":{"id":"gqbLNz-O_p-A"}},{"cell_type":"markdown","source":["Напишите функцию read_first(n_lines, file), которая будет открывать файл file и выводить на печать построчно первые строки в количестве n_lines. Протестируйте функцию на файле [poem.txt](https://disk.yandex.ru/d/FMDR6W_fGTCEkw).\n","\n"],"metadata":{"id":"6cFdsxHO_O22"}},{"cell_type":"code","source":[],"metadata":{"id":"gHwj97aJ-llT"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Pandas"],"metadata":{"id":"v9xBCsFK_tWY"}},{"cell_type":"markdown","source":["1.   Импортировать библиотеку pandas.\n","2.   Прочитать табличный файл [coupon_stats.xlsx](https://disk.yandex.ru/i/0otNaebrxx6bvQ) и записать результат в датафрейм.\n","3.   Вывести первые 10 строк датафрейма на экран и изучить содержимое. В нем содержатся следующие столбцы:\n","     *   id – идентификатор тиража купонов, которые выдаются в мобильном приложении супермаркета во время проведения акции;\n","     *   discount_type - тип скидки по купону;\n","     *   discount_value – размер скидки по купону;\n","     *   good_category – категория товара;\n","     *   good – наименование товара;\n","     *   coupons_given – количество выданных пользователям приложения купонов за период акции;\n","     *   coupons_used – количество использованных пользователями купонов за период акции.\n","4.   Вывести количество строк и столбцов в таблице.\n","5.   Добавить в датафрейм столбец coupons_not_used, который содержал бы информацию о количестве не использованных купонов каждого типа за период акции.\n","6.   Преобразовать все значения из столбца coupons_not_used в тип float с помощью метода apply.\n","7.   Посчитать суммарное количество выданных и использованных купонов в каждой категории товара.\n"],"metadata":{"id":"l9k3aXxaAKI2"}},{"cell_type":"code","source":["import pandas as pd\n","\n","\n","df = pd.read_excel('coupon_stats.xlsx')\n","\n","\n","print(\"Первые 10 строк данных:\")\n","print(df.head(10))\n","print(f\"\\nКоличество строк и столбцов: {df.shape}\")\n","\n","df['coupons_not_used'] = df['coupons_given'] - df['coupons_used']\n","\n","df['coupons_not_used'] = df['coupons_not_used'].apply(float)\n","\n","\n","grouped = df.groupby('good_category', as_index=False)[\n","    ['coupons_given', 'coupons_used']\n","].sum()\n","\n","print(\"\\nСуммарные показатели по категориям товаров:\")\n","print(grouped)"],"metadata":{"id":"ukoVGoqfDrJm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1749627772873,"user_tz":-180,"elapsed":453,"user":{"displayName":"Матвей Сергин","userId":"09123747508645331160"}},"outputId":"6c81e0de-6ada-4f98-aeef-881005323c37"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Первые 10 строк данных:\n","   id    discount_type  discount_value           good_category  \\\n","0   1  percentDiscount              50         Легкий алкоголь   \n","1   2  percentDiscount              50         Легкий алкоголь   \n","2   3  percentDiscount              50         Легкий алкоголь   \n","3   4  percentDiscount              50         Легкий алкоголь   \n","4   5  percentDiscount              20  Безалкогольные напитки   \n","5   6  percentDiscount              25  Безалкогольные напитки   \n","6   7  percentDiscount              50           Бытовая химия   \n","7   8  percentDiscount              50           Бытовая химия   \n","8   9  percentDiscount              50           Бытовая химия   \n","9  10  percentDiscount              50  Безалкогольные напитки   \n","\n","                    good  coupons_given  coupons_used  \n","0                   Пиво          31103         11519  \n","1                   Пиво          20487          6410  \n","2                   Пиво           5132          1554  \n","3                   Пиво          45610         16680  \n","4                  Вода          378900         16266  \n","5                  Вода          607458         20513  \n","6  Средства от насекомых          15228          1442  \n","7  Средства от насекомых          35796          3034  \n","8  Средства от насекомых         113547          5561  \n","9                  Вода           74471          1840  \n","\n","Количество строк и столбцов: (67, 7)\n","\n","Суммарные показатели по категориям товаров:\n","             good_category  coupons_given  coupons_used\n","0                 Бакалея         1611790        240195\n","1   Безалкогольные напитки        2138290        249136\n","2            Бытовая химия         164571         10037\n","3    Замороженные продукты           2793          1388\n","4     Кондитерские изделия         544262        150997\n","5        Корм для животных         298579         77292\n","6          Легкий алкоголь         243930         71679\n","7                Мороженое           3867          2052\n","8          Мясные продукты         203015         60838\n","9             Мясо и птица         104807         21741\n","10           Полуфабрикаты          68226         18185\n","11                   Снэки         246399         66163\n","12                     Сыр           7041          4051\n"]}]},{"cell_type":"markdown","source":["# Homework"],"metadata":{"id":"vC2v0StLENNT"}},{"cell_type":"markdown","source":["*3 балла*\n","1.   Выберите англоязычный текст в художественном стиле (не менее 20 000 символов). Сохраните его в файл текстового формата (docx, txt, etc.)\n","2.   Прочитайте текст из файла и запишите его в переменную text.\n","3.   На основе текста с использованием кода из практической работы по Spacy, а также метода apply cоздайте датафрейм следующей струкуры:\n","  - token - токен;\n","  - lemma - лемма;\n","  - pos - часть речи;\n","  - is_stop - является ли токен стоп-словом (True - если токен является стоп-словом; False - если токен стоп-словом не является).\n","4.   Сохраните датафрейм в Excel-файле.\n","5.   С помощью метода groupby посчитайте следующие метрики:\n","     - 10 наиболее часто встречающихся слов (в качестве основы для группировки используйте леммы, чтобы считать уникальные слова, вне зависимости от их грамматической формы);\n","     - 10 наиболее часто встречающихся частей речи.\n","\n","Дополнительно посчитайте (+1 балл):\n","- процент стоп-слов (для этого после группировки необходимо получить значение из нужной ячейки по названию столбца и индексу строки);\n","- 10 наиболее часто встречающихся слов, которые не являются стоп-словами (для этого необходимо предварительно отфильтровать датафрейм).\n","\n","Дополнительно посчитайте (+1 балл):\n","- наиболее часто встречающиеся именованные сущности в тексте;\n","- процент токенов, относящихся к именованным сущностям (т.к. некоторые именованные сущности представляют собой словосочетания, необходимо это учитывать при подсчете);\n","- любые другие метрики, которые, по вашему мнению, позволят охарактеризовать особенность лексики выбранного текста."],"metadata":{"id":"nQL8I4juEZrM"}},{"cell_type":"code","source":["import spacy\n","import pandas as pd\n","from collections import Counter\n","\n","nlp = spacy.load(\"en_core_web_sm\")\n","\n","with open(\"выключение.txt\", \"r\", encoding=\"utf-8\") as file:\n","    text = file.read()\n","\n","doc = nlp(text)\n","\n","data = []\n","for token in doc:\n","    data.append({\n","        \"token\": token.text,\n","        \"lemma\": token.lemma_,\n","        \"pos\": token.pos_,\n","        \"is_stop\": token.is_stop\n","    })\n","df = pd.DataFrame(data)\n","\n","df.to_excel(\"tokens_analysis.xlsx\", index=False)\n","\n","top_lemmas = df.groupby('lemma').size().reset_index(name='count')\n","top_lemmas = top_lemmas.sort_values('count', ascending=False).head(10)\n","\n","top_pos = df.groupby('pos').size().reset_index(name='count')\n","top_pos = top_pos.sort_values('count', ascending=False).head(10)\n","\n","stop_percentage = (df['is_stop'].sum() / len(df)) * 100\n","\n","non_stop_df = df[~df['is_stop']]\n","top_non_stop = non_stop_df.groupby('lemma').size().reset_index(name='count')\n","top_non_stop = top_non_stop.sort_values('count', ascending=False).head(10)\n","\n","entities = [ent.text for ent in doc.ents]\n","entity_freq = Counter(entities).most_common(10)\n","\n","\n","entity_tokens = [token for ent in doc.ents for token in ent]\n","entity_percentage = (len(entity_tokens) / len(df)) * 100\n","\n","\n","df['word_length'] = df['token'].apply(len)\n","avg_word_length = df['word_length'].mean()\n","\n","\n","with pd.ExcelWriter('analysis_results.xlsx') as writer:\n","    top_lemmas.to_excel(writer, sheet_name='Top Lemmas', index=False)\n","    top_pos.to_excel(writer, sheet_name='Top POS', index=False)\n","    top_non_stop.to_excel(writer, sheet_name='Top Non-Stop Words', index=False)\n","\n","    summary = pd.DataFrame({\n","        'Metric': ['Stop Word Percentage', 'Entity Token Percentage', 'Average Word Length'],\n","        'Value': [stop_percentage, entity_percentage, avg_word_length]\n","    })\n","    summary.to_excel(writer, sheet_name='Summary', index=False)\n","\n","    pd.DataFrame(entity_freq, columns=['Entity', 'Count']).to_excel(\n","        writer, sheet_name='Top Entities', index=False\n","    )\n","\n","print(\"Анализ успешно завершен!\")\n","print(top_lemmas, top_non_stop, top_pos)"],"metadata":{"id":"-m5NyKQVEPmh","colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"executionInfo":{"status":"ok","timestamp":1749628073185,"user_tz":-180,"elapsed":1618,"user":{"displayName":"Матвей Сергин","userId":"09123747508645331160"}},"outputId":"e754e3bf-c5e6-4efc-d12b-71aa029b17b2"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Анализ успешно завершен!\n","    lemma  count\n","3       \"    120\n","5       ,    113\n","7       .     82\n","68     be     73\n","0      \\n     60\n","1      \\n     58\n","428   you     49\n","273    of     44\n","19      I     43\n","367   the     41       lemma  count\n","3         \"    120\n","4         ,    113\n","6         .     82\n","0        \\n     60\n","1        \\n     58\n","9         ;     22\n","29      Mr.     21\n","12   Bennet     14\n","10        ?     14\n","163    know     13       pos  count\n","12  PUNCT    368\n","10   PRON    288\n","15   VERB    208\n","7    NOUN    183\n","3     AUX    144\n","1     ADP    124\n","14  SPACE    118\n","0     ADJ     99\n","5     DET     96\n","11  PROPN     89\n"]}]}]}